[tool:pytest]
# pytest配置文件

# 测试发现
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 输出配置
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# 标记定义
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    frontend: marks tests as frontend tests
    backend: marks tests as backend tests
    smoke: marks tests as smoke tests
    api: marks tests as API tests
    dual_mode: marks tests related to dual mode functionality
    ai: marks tests related to AI functionality
    rules: marks tests related to rules engine

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:aiohttp.*

# 异步测试配置
asyncio_mode = auto

# 最小版本要求
minversion = 7.0

# 测试超时（秒）
timeout = 300

# 并行测试
# 使用 -n auto 启用自动并行测试
# pytest -n auto

# 覆盖率配置
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */node_modules/*
    */app/*
    setup.py
    smoke_test.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml