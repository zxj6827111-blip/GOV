#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
全面修复中文编码问题的脚本
"""

import glob
import os
import re

# 更全面的编码映射表
ENCODING_FIXES = {
    # 基础映射
    "鐜?": "率",
    "棶棰?": "问题",
    "瑙勫垯": "规则",
    "琛?": "表",
    "涓?": "中",
    "浜?": "于",
    "簲": "应",
    "浣?": "低",
    "綆": "于",
    "棰?": "预",
    # 扩展映射
    "鍒?": "别",
    "鍚?": "名",
    "鍖?": "匹",
    "閰?": "配",
    "鍣?": "器",
    "鍧?": "块",
    "绫?": "类",
    "瀵?": "对",
    "璞?": "象",
    "鍒?": "初",
    "濮?": "始",
    "鍖?": "化",
    "鏍?": "标",
    "鍑?": "准",
    "绌?": "空",
    "瀛?": "字",
    "绗?": "符",
    "涓?": "串",
    "绮?": "精",
    "纭?": "确",
    "姝?": "正",
    "鍒?": "则",
    "妯?": "模",
    "绯?": "糊",
    "鍒?": "分",
    "鏁?": "数",
    "澶?": "太",
    "鍒?": "创",
    "寤?": "建",
    "娴?": "测",
    "璇?": "试",
    "鐢?": "用",
    "鐨?": "的",
    "瀹?": "实",
    "渚?": "例",
    "妫?": "检",
    "鏌?": "查",
    "蹇?": "必",
    "闇?": "需",
    "鏍?": "格",
    "缂?": "缺",
    "灏?": "少",
    "鎯?": "情",
    "鍐?": "况",
    "鍖?": "包",
    "鍚?": "含",
    "鎵?": "所",
    "鏈?": "有",
    "涓?": "不",
    "搴?": "应",
    "璇?": "该",
    "澶?": "失",
    "鑾?": "获",
    "鍙?": "取",
    "姹?": "汇",
    "鎬?": "总",
    "鍏?": "关",
    "閿?": "键",
    "椤?": "项",
    "鐩?": "目",
    "涓?": "三",
    "鍏?": "公",
    "缁?": "经",
    "璐?": "费",
    "鏈?": "机",
    "杩?": "运",
    "琛?": "行",
    "鐗?": "格",
    "鏂?": "文",
    "鏈?": "本",
    "鍦?": "在",
    "妗?": "档",
    "鎵?": "找",
    # AI相关
    "AI杈?": "AI辅",
    "鍔?": "助",
    "鎶?": "抽",
    "鍗?": "单",
    "鍏?": "元",
    "瑙?": "规",
    "AI杈呭姪": "AI辅助",
    "鍔熻兘": "功能",
    "AI澶?": "AI失",
    "璐?": "败",
    "鏃?": "时",
    "闄?": "降",
    "绾?": "级",
    "澶?": "处",
    "鐞?": "理",
    "鍘?": "去",
    "閲?": "重",
    "鍔?": "功",
    "鑳?": "能",
    "闂?": "问",
    "棰?": "题",
    "鐢?": "生",
    "鎴?": "成",
    "鍩?": "基",
    "涓?": "一",
    "鑷?": "致",
    "鎬?": "性",
    "璀?": "警",
    "鍛?": "告",
    "鐪?": "真",
    "AI闆?": "AI集",
    "瑕?": "要",
    "缃?": "置",
    "AI鏈?": "AI服",
    "鍔?": "务",
    "楠?": "验",
    "璇?": "证",
    "缁?": "结",
    "鏋?": "果",
    "鏈?": "期",
    "閿?": "错",
    "璇?": "误",
    "閲?": "量",
    "鏍?": "根",
    "鎹?": "据",
    "閲?": "金",
    "鏍?": "样",
    "鑷?": "至",
    "涓?": "个",
    "娑?": "消",
    "鎭?": "息",
    "寮?": "式",
    # 更多常见乱码
    "鏀?": "收",
    "鍏?": "入",
    "鏀?": "支",
    "鍑?": "出",
    "鍐?": "决",
    "绠?": "算",
    "璁?": "计",
    "鍏?": "其",
    "浠?": "他",
    "鍐?": "内",
    "瀹?": "容",
    "绗?": "第",
    "椤?": "页",
    "浜?": "二",
    "鍒?": "到",
    "淇?": "信",
    # 特殊字符修复
    "锛?": "（",
    "锛?": "）",
    "銆?": "。",
    "锛?": "，",
    "锛?": "：",
    "锛?": "；",
    "锛?": "？",
    "锛?": "！",
    "鈥?": '"',
    "鈥?": """,
    '鈥?': """,
    # 数字相关
    "骞?": "年",
    "涓?": "为",
    "涓?": "万",
    "瀹?": "完",
    "澶?": "大",
    "涓?": "主",
    "鍘?": "原",
    "鍥?": "因",
    "鎸?": "按",
    "闄?": "际",
    "姹?": "求",
    "璋?": "调",
    "鏁?": "整",
    "灏?": "小",
    "鎸?": "持",
    "骞?": "平",
    "璺?": "跳",
    "杩?": "过",
    "AI娴?": "AI测",
    "璁?": "设",
    "鐜?": "环",
    "澧?": "境",
    "鍙?": "变",
    "鍚?": "启",
    "鍣?": "噪",
    "婊?": "滤",
    "澶?": "备",
    "鍚?": "后",
    "缁?": "续",
    "鍋?": "做",
    "鐜?": "现",
    "澶?": "多",
    "娆?": "次",
    "鍓?": "前",
    "鍙?": "只",
    "鍒?": "判",
    "瀹?": "定",
    "鎻?": "描",
    "杩?": "述",
    "鐗?": "片",
    "娈?": "段",
    "鐮?": "码",
    # 更多复合词修复
    "鏀跺叆鏀嚭鍐崇畻": "收入支出决算",
    "鏀跺叆鍐崇畻": "收入决算",
    "鏀嚭鍐崇畻": "支出决算",
    "涓夊叕缁忚垂": "三公经费",
    "鏈哄叧杩愯缁忚垂": "机关运行经费",
    "棰勭畻鎵ц": "预算执行",
    "瑙勫垯妫娴?": "规则检测",
    "琛牸鍖归厤": "表格匹配",
    "鏁版嵁涓鑷?": "数据一致",
    "鏂囨湰鍙?": "文本口",
    "寰勪竴鑷?": "径一致",
    "鏅鸿兘妫鏌?": "智能检查",
    "閫昏緫涓鑷?": "逻辑一致",
    "鍚堣鎬?": "合规性",
    "鍒嗘瀽": "分析",
    # 特殊情况
    "鐗囨锛?": "片段：",
    "骞村垵棰勭畻=": "年初预算=",
    "鍐崇畻=": "决算=",
    "鍒ゅ畾涓?": "判定为",
    "鏂囨湰鎻忚堪": "文本描述",
    "缂哄皯鍘熷洜": "缺少原因",
    "鏈": "未",
    "鍩烘湰鎸佸钩": "基本持平",
    "璺宠繃鐪熷疄AI娴嬭瘯": "跳过真实AI测试",
    "璁剧疆SKIP_REAL_AI_TEST=false鍚敤": "设置SKIP_REAL_AI_TEST=false启用",
    "鐪熷疄AI闆嗘垚娴嬭瘯": "真实AI集成测试",
    "闇瑕侀厤缃湡瀹炵殑AI鏈嶅姟": "需要配置真实的AI服务",
    "闇瑕佽缃湡瀹炵殑鐜鍙橀噺": "需要设置真实的环境变量",
    "缂哄皯鐜鍙橀噺": "缺少环境变量",
    "AI鏈嶅姟涓嶅彲鐢?": "AI服务不可用",
    "搴旇浠嶇劧鏈夌粨鏋滐紙闄嶇骇鍒扮函瑙勫垯妯″紡锛?": "应该仍然有结果（降级到纯规则模式）",
    "妫鏌湡鏈涚殑閿欒鏁伴噺": "检查真本期的错误数量",
    "鏍规嵁閲戞爣鏍锋湰锛屽簲璇湁锛?": "根据金标样本，应该有：",
    "鎬昏鍫嗭細鏁板煎皬浜庯紝鏂囨湰澶т簬": "总计堆：数值小于，文本大于",
    "涓敊璇?": "个错误",
    "鍏畨锛氭暟鍊煎皬浜庯紝鏂囨湰灏忎簬锛屼絾缂哄皯鍘熷洜": "公安：数值小于，文本小于，但缺少原因",
    "鍏朵粬4椤癸細鏁板煎皬浜庯紝鏂囨湰澶т簬": "其他4项：数值小于，文本大于",
    "鎬昏搴旇鏈?": "总计应该有",
    "鑷冲皯5涓敊璇?": "至少5个错误",
    "妫鏌秷鎭牸寮?": "检查消息格式",
    "鍣杩囨护鍑嗗锛堜负鍚庣画鍣杩囨护鍔熻兘鍋氬噯澶囷級": "噪过滤准备（为后续噪过滤功能做准备）",
    "鍒涘缓鍖呭惈鈥滃嚭鐜板娆♀濈殑闂": '创建包含"出现多次"的问',
    "杩囨护鍓嶅簲璇湁2涓棶棰?": "过滤前应该有2个问题",
    "杩囨护鈥滃嚭鐜板娆♀?": '过滤"出现多次"',
    "杩囨护鍚庡簲璇彧鏈?涓棶棰?": "过滤后应该只有1个问题",
    # 更多特殊情况
    "鐗囨锛氥屾祴璇曘?": '片段："测试"',
    "鍑虹幇澶氭锛氭敹鍏ユ敮鍑哄喅绠楁昏锛堥〉鐮乕1, 3]锛?": "出现多次：收入支出决算总计（页码[1, 3]）",
    "鍑虹幇澶氭": "出现多次",
    "涓嶅湪": "不在",
    "鍑虹幇澶氭锛?": "出现多次：",
    "椤电爜": "页码",
    "涓?": "两",
    # 更多复合修复
    "鏀跺叆鏀嚭鍐崇畻鎬昏": "收入支出决算总计",
    "鏀跺叆鍐崇畻琛?": "收入决算表",
    "鏀嚭鍐崇畻琛?": "支出决算表",
    "涓夊叕缁忚垂鏀嚭鎯呭喌璇存槑": "三公经费支出情况说明",
    "鏈哄叧杩愯缁忚垂浣跨敤鎯呭喌": "机关运行经费使用情况",
    "棰勭畻鎵ц鐜囧簲涓嶄綆浜?0%": "预算执行率应不低于60%",
    "棰勭畻鎵ц鐜囬棶棰?": "预算执行率问题",
    "琛牸鍖归厤鍣?": "表格匹配器",
    "鏁版嵁涓鑷存?": "数据一致性",
    "鏂囨湰鍙緞涓鑷存?": "文本口径一致性",
    "AI鏅鸿兘妫鏌?": "AI智能检查",
    "閫昏緫涓鑷存у拰鍚堣鎬у垎鏋?": "逻辑一致性和合规性分析",
    "鈥?": "…",
    "鈥?": "—",
    "鈥?": "–",
    # 更多数字和单位
    "涓囧厓": "万元",
    "鍗冨厓": "千元",
    "鏈?": "月",
    "鏃?": "日",
    "鐐?": "点",
    "绉?": "秒",
    "鍒?": "删",
    "闄?": "除",
    "淇?": "修",
    "鏀?": "改",
    "鏇?": "更",
    "鏂?": "新",
    "娣?": "添",
    "鍔?": "加",
    "鍑?": "减",
    "澧?": "增",
    "鎻?": "提",
    "楂?": "高",
    "鍗?": "升",
    "涓?": "下",
    "涓?": "上",
    "宸?": "左",
    "鍙?": "右",
    "闂?": "间",
    "澶?": "外",
    "閲?": "里",
    "闈?": "面",
    "涓?": "东",
    "瑗?": "西",
    "鍗?": "南",
    "鍖?": "北",
    "闀?": "长",
    "鐭?": "短",
    "瀹?": "宽",
    "绐?": "窄",
    "鍘?": "厚",
    "钖?": "薄",
    "娣?": "深",
    "娴?": "浅",
    "杞?": "轻",
    "蹇?": "快",
    "鎱?": "慢",
    "鏃?": "旧",
    "濂?": "好",
    "鍧?": "坏",
    "缇?": "美",
    "涓?": "丑",
    "鍋?": "假",
    "閭?": "邪",
    "鍠?": "善",
    "鎭?": "恶",
    "鍠?": "喜",
    "鎬?": "怒",
    "鍝?": "哀",
    "涔?": "乐",
    # 更多名词
    "浜?": "人",
    "鐗?": "物",
    "浜?": "事",
    "娉?": "法",
    "鍒?": "制",
    "搴?": "度",
    "鏂?": "方",
    "鎵?": "手",
    "鎺?": "措",
    "鏂?": "施",
    # 更多技术术语
    "绯?": "系",
    "缁?": "统",
    "缁?": "组",
    "浠?": "件",
    "鎺?": "接",
    "鍙?": "口",
    "鍗?": "协",
    "璁?": "议",
    # 更多常用词
    "鍙?": "可",
    "浠?": "以",
    "椤?": "须",
    "澶?": "够",
    "浼?": "会",
    # 更多连词和介词
    "鍜?": "和",
    "涓?": "与",
    "鍙?": "及",
    # 更多副词
    "寰?": "很",
    "闈?": "非",
    "甯?": "常",
    "鐗?": "特",
    "鍗?": "十",
    "鏉?": "条",
    "寮?": "张",
    "棰?": "颗",
    "绮?": "粒",
    "婊?": "滴",
    "涓?": "丝",
    "缂?": "缕",
    "鑲?": "股",
    "閬?": "道",
    # 更多疑问词
    "浠?": "什",
    "涔?": "么",
    "璋?": "谁",
    "鍝?": "哪",
    "閭?": "那",
    "杩?": "这",
    "鎬?": "怎",
    "浣?": "何",
    "鍊?": "候",
    "鍎?": "儿",
    "杩?": "远",
    "杩?": "近",
    # 更多感叹词
    "鍝?": "哎",
    # 更多拟声词
    "鍝?": "哈",
}


def fix_chinese_encoding_in_file(file_path: str) -> bool:
    """
    修复单个文件中的中文编码问题

    Args:
        file_path: 文件路径

    Returns:
        bool: 是否进行了修复
    """
    try:
        # 尝试不同的编码读取文件
        content = None

        for encoding in ["utf-8", "gbk", "gb2312", "latin1"]:
            try:
                with open(file_path, "r", encoding=encoding) as f:
                    content = f.read()
                    break
            except UnicodeDecodeError:
                continue

        if content is None:
            print(f"无法读取文件: {file_path}")
            return False

        # 应用编码修复
        original_content = content

        # 应用所有编码修复
        for garbled, correct in ENCODING_FIXES.items():
            content = content.replace(garbled, correct)

        # 修复一些特殊的语法问题
        # 修复未闭合的字符串
        content = re.sub(r'(["\'])([^"\']*?)$', r"\1\2\1", content, flags=re.MULTILINE)

        # 修复一些常见的语法错误
        content = re.sub(
            r'assert\s+matcher\._exact_match\("([^"]*)",\s*table_alias\)\s*is\s*False\s*assert',
            r'assert matcher._exact_match("\1", table_alias) is False\n        assert',
            content,
        )

        # 如果内容有变化，写回文件
        if content != original_content:
            with open(file_path, "w", encoding="utf-8") as f:
                f.write(content)
            return True

        return False

    except Exception as e:
        print(f"处理文件 {file_path} 时出错: {e}")
        return False


def main():
    """主函数"""
    tests_dir = "tests"

    if not os.path.exists(tests_dir):
        print(f"测试目录 {tests_dir} 不存在")
        return

    # 获取所有Python文件
    python_files = glob.glob(os.path.join(tests_dir, "**", "*.py"), recursive=True)

    fixed_count = 0
    total_count = len(python_files)

    print(f"开始处理 {total_count} 个Python文件...")

    for file_path in python_files:
        if fix_chinese_encoding_in_file(file_path):
            print(f"已修复: {file_path}")
            fixed_count += 1

    print("\n处理完成！")
    print(f"总文件数: {total_count}")
    print(f"修复文件数: {fixed_count}")
    print(f"未修复文件数: {total_count - fixed_count}")


if __name__ == "__main__":
    main()
